{"version":3,"sources":["webpack:///path---angular-test-components-unit-shallow-deep-7486e97ba964598585c9.js","webpack:///./.cache/json/angular-test-components-unit-shallow-deep.json"],"names":["webpackJsonp","335","module","exports","data","markdownRemark","html","frontmatter","path","title","author","date","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,wiCAAAC,aAA8jCC,KAAA,6CAAAC,MAAA,uDAAAC,OAAA,mBAAAC,KAAA,gBAAqKC","file":"path---angular-test-components-unit-shallow-deep-7486e97ba964598585c9.js","sourcesContent":["webpackJsonp([274223600717461],{\n\n/***/ 335:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<hr>\\n<p><strong>Angular Directives</strong> are an important construct in angular to make <strong>DOM</strong> <em>manipulation</em> and / or <em>event handling</em> abstract.</p>\\n<p><strong>We must <em>Unit Test</em> directives by mocking all dependencies of directive.</strong></p>\\n<ol>\\n<li>Very Simple to write, no need for TestBed, just work with jasmine spies and mocks</li>\\n<li>Run them as often, fast and effective</li>\\n</ol>\\n<p><strong>Since directive work on components (compiled DOM) we must also test them with an actual component</strong></p>\\n<ol>\\n<li>Need TestComponent, and TestBed, to create a TestModule which compiles your fake TestComponent with directive to be tested</li>\\n<li>Dependencies to the fake TestComponent are mocked, instead of mocking the containerRef to directive</li>\\n<li>Besides little complexity setting up the TestBed, fast and effective</li>\\n</ol>\\n<p>Unit Tests are easy to write and understand. We are going to discuss here testing of directives with an actual TestComponent</p>\\n<h2>Lets write some tests</h2>\",\"frontmatter\":{\"path\":\"/angular-test-components-unit-shallow-deep\",\"title\":\"Testing Angular Directives with a fake TestComponent\",\"author\":\"Simar Paul Singh\",\"date\":\"2018-08-19\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---angular-test-components-unit-shallow-deep-7486e97ba964598585c9.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<hr>\\n<p><strong>Angular Directives</strong> are an important construct in angular to make <strong>DOM</strong> <em>manipulation</em> and / or <em>event handling</em> abstract.</p>\\n<p><strong>We must <em>Unit Test</em> directives by mocking all dependencies of directive.</strong></p>\\n<ol>\\n<li>Very Simple to write, no need for TestBed, just work with jasmine spies and mocks</li>\\n<li>Run them as often, fast and effective</li>\\n</ol>\\n<p><strong>Since directive work on components (compiled DOM) we must also test them with an actual component</strong></p>\\n<ol>\\n<li>Need TestComponent, and TestBed, to create a TestModule which compiles your fake TestComponent with directive to be tested</li>\\n<li>Dependencies to the fake TestComponent are mocked, instead of mocking the containerRef to directive</li>\\n<li>Besides little complexity setting up the TestBed, fast and effective</li>\\n</ol>\\n<p>Unit Tests are easy to write and understand. We are going to discuss here testing of directives with an actual TestComponent</p>\\n<h2>Lets write some tests</h2>\",\"frontmatter\":{\"path\":\"/angular-test-components-unit-shallow-deep\",\"title\":\"Testing Angular Directives with a fake TestComponent\",\"author\":\"Simar Paul Singh\",\"date\":\"2018-08-19\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/angular-test-components-unit-shallow-deep.json\n// module id = 335\n// module chunks = 274223600717461"],"sourceRoot":""}